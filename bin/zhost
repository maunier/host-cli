#!/usr/bin/env node

'use strict'

const { exec } = require('child_process');
const yargs = require('yargs');
const path = require('path');
const argv = yargs.argv;

function getShFilePath(filename) {
  return path.resolve(__dirname, `../sh/${filename}.sh`);
}

// exec也是基于event emitter做的，得做stdout监听，捕获data再打出来
// node调shell脚本，shell脚本的内容是不会直接输出到标准流的，因为通过exec创建的子进程，子进程会把输出返回给Nodejs

yargs
  .command('add [ip] [host]', 'add a host', {
    ip: {},
    host: {},
  }, argv => {
    const ip = argv.ip;
    const host = argv.host;

    exec(`sh ${getShFilePath('zhost-add')} ${ip} ${host}`, (err, stdout) => {
      err && console.log(err);
      console.log(stdout);
    });
  })
  .command('use [lines...]', 'use the ip host at the line', {
    lines: {},
  }, argv => {
    const lines = argv.lines;

    exec(`sh ${getShFilePath('zhost-use')} ${lines}`, (err, stdout) => {
      err && console.log(err);
      console.log(stdout);
    })
  })
  .argv;

const justDisplay = !argv._.length;
if (justDisplay) {
  exec('cat -n /etc/hosts', (err, stdout, stderr) => {
    console.log(stdout);
  });
}
